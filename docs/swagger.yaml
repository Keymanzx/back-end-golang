basePath: /api/v1
definitions:
  auth.LoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - user_name
    type: object
  auth.RegisterResponse:
    properties:
      token:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  user.UserResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for Go Backend
  title: Go Backend API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return token
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Register Request
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /user/profile:
    get:
      description: Retrieve the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get user profile
      tags:
      - user
swagger: "2.0"
